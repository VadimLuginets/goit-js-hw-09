{"mappings":"YAAA,IAAMA,EAASC,SAASC,cAAc,QAClCC,EAAY,EACZC,EAAc,EAElBJ,EAAOK,iBAAiB,UAAU,SAAAC,GAChCA,EAAEC,iBACFC,YAAW,WACTL,EAAYM,OAAOT,EAAOU,KAAKC,OAE/B,IAAK,IAAIC,EAAQ,EAAGA,GAASZ,EAAOa,OAAOF,MAAOC,IAEhDE,EAAcF,EADdR,GAAeD,GAEZY,MAAK,SAAAC,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MACjBC,MAAM,qBAAoCC,OAAfH,EAAS,QAAYG,OAANF,EAAM,WAEjDG,OAAM,SAAAL,G,IAAGC,EAAQD,EAARC,SAAUC,EAAKF,EAALE,MAClBC,MAAM,oBAAmCC,OAAfH,EAAS,QAAYG,OAANF,EAAM,aAGpDT,OAAOT,EAAOkB,MAAMP,WAGzB,IAAMG,EAAgB,SAACG,EAAUC,GAC/B,OAAO,IAAII,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCnB,YAAW,WACLiB,EAGFF,EAAQ,CAAEN,WAAUC,UAIpBM,EAAO,CAAEP,WAAUC,YAEpBA,O","sources":["src/js/03-promises.js"],"sourcesContent":["const formEl = document.querySelector('form');\nlet stepDelay = 0;\nlet currentStep = 0;\n\nformEl.addEventListener('submit', e => {\n  e.preventDefault();\n  setTimeout(() => {\n    stepDelay = Number(formEl.step.value);\n\n    for (let index = 1; index <= formEl.amount.value; index++) {\n      currentStep += stepDelay;\n      createPromise(index, currentStep)\n        .then(({ position, delay }) => {\n          alert(`Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          alert(`Rejected promise ${position} in ${delay} ms`);\n        });\n    }\n  }, Number(formEl.delay.value));\n});\n\nconst createPromise = (position, delay) => {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n\n        resolve({ position, delay });\n      } else {\n        // Reject\n\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$stepDelay","$ce04d3a99e08e73b$var$currentStep","addEventListener","e","preventDefault","setTimeout","Number","step","value","index","amount","$ce04d3a99e08e73b$var$createPromise","then","param","position","delay","alert","concat","catch","Promise","resolve","reject","shouldResolve","Math","random"],"version":3,"file":"03-promises.254acd3a.js.map"}